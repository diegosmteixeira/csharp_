
[Classes e métodos selados]

	.Palavra chave: sealed

	.Classe: evita que a classe seja herdada

		NOTA: ainda é possível extender a funcionalidade de uma classe selada 
		usando "extension methods"

	namespace Course {
		sealed class SavingsAccount {

	.Método: evita que um método sobreposto possa ser sobreposto novamente
		=> somente pode ser aplicado a métodos sobrepostos


Para quê?

	.Segurança: dependendo das regras do negócio, às vezes é desejável
	garantir que uma classe não seja herdada, ou que um método não seja
	sobreposto.
		-geralmente convém selar métodos sobrepostos, pois sobreposições múltiplas
		podem ser uma porta de entrada para inconsistências.

	.Performance: atributos de tipo de uma classe selada são analisados
	de forma mais rápida em tempo de execução.

		-Exemplo clássico: string

	-> Existem alguns processamentos, como por exemplo, reflection, que vai analisar a estrutura
		da sua classe. Caso a classe não seja selada ele vai ter que analisar toda a hierarquia
		de subclasses.

	Então quando a classe é selada o processamento já sabe que não precisa analisar subclasses.

=> Ganho de performance em reflections.
		